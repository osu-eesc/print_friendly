<?php

/**
 * Implements hook_permission()
**/
function print_friendly_permission() {
  return array(
    'administer print friendly' => array(
       'title' => t('Administer print friendly settings'),
       'description' => t('Perform administrative tasks for the print friendly module'),
    ),
    'view print friendly webform submissions' => array(
      'title' => t('View print friendly webform submissions'),
      'description' => t('Allows the user to view webform submissions in a printer-friendly format')
    ),
  );
}


/**
 * Implements hook_menu()
**/
function print_friendly_menu() {
  $items['admin/config/print-friendly'] = array(
    'title' => 'Print friendly administration',
    'description' => 'Administrative settings page for the print friendly module',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer print friendly'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('print_friendly_admin_page'),
  );
  $items['node/%print_friendly_nid/submission/%print_friendly_sid/print'] = array(
    'type' => MENU_CALLBACK,
    'access arguments' => array('view print friendly webform submissions'),
    'page callback' => 'print_friendly_webform_submissions_print_page',
    'page arguments' => array(1, 3),
  );
  return $items;
}


/**
 * Callback for the webform submission print friendly page
**/
function print_friendly_webform_submissions_print_page($node, $submission) {
  return theme('print_friendly_webform_submission', array('node' => $node, 'submission' => $submission));
}


/**
 * Menu loader callback. Load a webform node if the given nid is a webform.
 */
function print_friendly_nid_load($nid) {
  if (!is_numeric($nid)) {
    return FALSE;
  }
  $node = node_load($nid);
  if (!isset($node->type) || !in_array($node->type, webform_variable_get('webform_node_types'))) {
    return FALSE;
  }
  return $node;
}


/**
 * Menu loader callback. Load a webform submission if the given sid is a valid.
 */
function print_friendly_sid_load($sid, $nid) {
  module_load_include('inc', 'webform', 'includes/webform.submissions');
  $submission = webform_get_submission($nid, $sid);
  return empty($submission) ? FALSE : $submission;
}


/**
 * Implements hook_block_info().
 */
function print_friendly_block_info() {
  $blocks = array(
    'print_friendly_block' => array(
      'info' => t('Print friendly page links'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function print_friendly_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'print_friendly_block':
      $menu_item = menu_get_item();
      $print_friendly_enabled = FALSE;
      switch ($menu_item['page_callback']) {
        case 'node_page_view':
          $node = $menu_item['page_arguments']['0'];
          if (!in_array($node->type, variable_get('print_friendly_excluded_content_types', array()), TRUE)) {
            $print_friendly_enabled = TRUE;
          }
          break;
        case 'views_page':
          $view_name = $menu_item['page_arguments']['0'];
          if (!in_array($view_name, variable_get('print_friendly_excluded_views', array()), TRUE)) {
           $print_friendly_enabled = TRUE;
          }
          break;
        case 'webform_submission_page':
          $print_friendly_exclude_webform_results = variable_get('print_friendly_exclude_webform_results', array());
          if (!in_array('webform-submission', $print_friendly_exclude_webform_results, TRUE)) {
            $print_friendly_enabled= TRUE;
          }
          break;
      }
      if ($print_friendly_enabled) {
        if (drupal_is_front_page()) {
          $current_path = '';
        }
        else {
          $current_path= current_path();
        }
        if (strlen($current_path) == 0 || substr($current_path, -1) == '/') {
          $url_path = $current_path . 'print';
        }
        else {
          $url_path = $current_path . '/print';
        }
        $block['content'] = l(t('Print-friendly version'), $url_path, array('attributes' => array('title' => t('Show a printer-friendly version of this page'))));
      }
      break;
  }
  return $block;
}


/**
 * Callback for the admin page form for the print friendly module
**/
function print_friendly_admin_page($form, &$form_state) {

  $all_views = views_get_all_views();
  $page_views = array();
  foreach ($all_views as $view_name => $view) {
    foreach ($view->display as $display) {
      if ($display->display_plugin == 'page') {
        $page_views[$view_name] = !empty($view->human_name) ? $view->human_name : $view_name;
      }
    }
  }
  asort($page_views);

  $enabled_themes = list_themes();
  $print_friendly_theme_list = array();
  foreach ($enabled_themes as $theme_name => $theme_info) {
    if ($theme_info->status == TRUE) {
      $print_friendly_theme_list[$theme_name] = $theme_info->info['name'];
    }
  }
  $system_theme_default = variable_get('theme_default', 'bartik');

  $form['print_friendly_print_theme'] = array(
    '#type' => 'radios',
    '#title' => t('Print friendly page theme'),
    '#default_value' => variable_get('print_friendly_print_theme', $system_theme_default),
    '#options' => $print_friendly_theme_list,
  );
  $form['excluded_pages'] = array(
    '#type' => 'fieldset',
    '#title' => t('Excluded Pages'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['excluded_pages']['print_friendly_excluded_content_types'] = array(
    '#type' => 'checkboxes',
    '#options' => node_type_get_names(),
    '#default_value' => variable_get('print_friendly_excluded_content_types', array()),
    '#title' => t('Content Types'),
  );
  $form['excluded_pages']['print_friendly_exclude_webform_results'] = array(
    '#type' => 'checkboxes',
    '#options' => array('webform-submissions' => t('Webform Submissions')),
    '#default_value' => variable_get('print_friendly_exclude_webform_results', FALSE),
    '#title' => t('Webform Submissions'),
  );
  $form['excluded_pages']['print_friendly_excluded_views'] = array(
    '#type' => 'checkboxes',
    '#options' => $page_views,
    '#default_value' => variable_get('print_friendly_excluded_views', array()),
    '#title' => t('Views'),
  );
  return system_settings_form($form);
}


/**
 * Implements hook_custom_theme()
**/
function print_friendly_custom_theme() {
  $path_parts = explode('/', request_path());
  $system_theme_default = variable_get('theme_default', 'bartik');
  $print_friendly_print_theme = variable_get('print_friendly_print_theme', $system_theme_default);
  if (end($path_parts) == 'print') {
    return $print_friendly_print_theme;
  }
}


/**
 * Implements hook_theme()
**/
function print_friendly_theme() {
  return array(
    'book_navigation' => array(
      'arguments' => array('book_link' => NULL),
      'template' => 'book-navigation',
      'path' => drupal_get_path('module', 'print_friendly') . '/theme',
    ),
    'book_export_html' => array(
      'arguments' => array('title' => NULL, 'contents' => NULL, 'depth' => NULL),
      'template' => 'book-export-html',
      'path' => drupal_get_path('module', 'print_friendly') . '/theme',
    ),
  );
}


/**
 * Implements hook_entity_info_alter()
**/
function print_friendly_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['print_friendly'] = array(
    'label' => t('Print Friendly'),
    'custom settings' => TRUE,
  );
}
